@startuml
actor Receptionist
participant "User/Interface" as UI
participant "AuthRouter" as Router
participant "AuthController" as Controller
participant "AuthRepository" as Repository
participant "UserModel" as UserModel
participant "Database" as DB

Receptionist -> UI: Request to change password
UI -> Router: GET /change-password
Router -> Controller: showChangePasswordForm()
Controller -> UI: Display change password form

Receptionist -> UI: Enter old password, new password, and confirm new password
UI -> Router: POST /change-password
Router -> Controller: changePassword()
Controller -> Repository: validateOldPassword()

Repository -> UserModel: fetchUserById()
UserModel -> DB: query user by ID
DB --> UserModel: user data
UserModel --> Repository: user data
Repository -> Controller: user data

Controller -> Controller: check if old password is correct
alt If old password is correct
    Controller -> Controller: validate new password strength
    alt If new password is valid
        Controller -> Repository: updatePassword()
        Repository -> UserModel: update password
        UserModel -> DB: update user password
        DB --> UserModel: password updated
        UserModel --> Repository: password update success
        Repository --> Controller: password update success
        Controller -> UI: 200 OK (password changed successfully)
        UI -> Receptionist: Display success message
    else If new password is invalid
        Controller -> UI: 400 Bad Request (invalid new password)
        UI -> Receptionist: Display error message (invalid new password)
    end
else If old password is incorrect
    Controller -> UI: 401 Unauthorized (incorrect old password)
    UI -> Receptionist: Display error message (incorrect old password)
end
@enduml
